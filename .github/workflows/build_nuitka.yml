name: Build Microstation using Nuitka

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        # Compile on older Linux to support newer versions
        os: [ubuntu-22.04, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
          cache: 'pip'
          cache-dependency-path: |
            **/*requirements.txt

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt -r dev-requirements.txt
          pip install PyGObject pyudev
          sudo apt update
          sudo apt upgrade -y
          sudo apt install sudo apt install -y pyqt5-dev-tools qtchooser qttools5-dev-tools
          sudo apt install -y patchelf ccache
          sudo apt install -y libxcb-cursor0 libcairo-dev libgirepository1.0-dev
          sudo apt install -y gobject-introspection-1.0
      
      - name: Compile Resources
        run: |
          source scripts/compile-ui.sh
          source scripts/compile-icons.sh
          source scripts/compile-langs.sh
          source scripts/compile-styles.sh

      - name: Build Executable
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: microstation
          mode: onefile
          python-flag: |
            "no_asserts"
            "no_docstrings"
            "-m"
          prefer-source-code: true
          windows-console-mode: "attach"
          windows-icon-from-ico: "microstation/icons/aperture.png"
          linux-icon: microstation/icons/aperture.png
          product-name: "Microstation"
          product-version: $(cat microstation/version.txt)
          file-version: $(cat microstation/version.txt)
          include-data-dir: |
            "microstation/arduino/=arduino/"
            "microstation/external_styles/=external_styles/"
            "microstation/icons/=icons/"
            "microstation/langs/=langs/"
            "microstation/ui/=ui/"
          include-data-files: |
            "microstation/version.txt=version.txt"
          enable-plugins: "pyqt6"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Build
          path: |
            build/*.exe
            build/*.bin
          include-hidden-files: true
